{"version":3,"file":"static/js/258.9e7f4299.chunk.js","mappings":"mLAgGA,UA1FwB,SAAH,GAAkC,IAA5BA,EAAK,EAALA,MAAOC,EAAM,EAANA,OAAQC,EAAI,EAAJA,KAChCC,GAAcC,EAAAA,EAAAA,QAAO,MAC3B,GAA0CC,EAAAA,EAAAA,UAAS,GAAE,eAA9CC,EAAa,KAAEC,EAAgB,KACtC,GAAsCF,EAAAA,EAAAA,UAAS,GAAE,eAA1CG,EAAW,KAAEC,EAAc,MAElCC,EAAAA,EAAAA,YAAU,WACNP,EAAYQ,QAAQC,MAAMC,UAAS,qBAAiBP,EAAa,OAEnB,OAA3CQ,SAASC,cAAc,iBAA0BD,SAASC,cAAc,6BAAD,OAA8BP,EAAW,OAAMQ,UAAUC,IAAI,SAC3I,GAAG,CAACX,EAAeE,IAsCnB,OACI,+BACI,SAAC,QAAU,CACPU,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,WAAY,CAAEC,SAAU,IACxBC,UAAU,gBAAe,UAEzB,iBAAK,UAASvB,EAAMwB,WAAW,IAAK,IAAIC,cAAeF,UAAU,sCAAqC,WAClG,eAAIA,UAAU,iGAAgG,SAAEvB,KAEhH,iBAAK0B,GAAG,mBAAmBH,UAAU,mEAAkE,WACnG,mBAAQrB,KAAK,SAASwB,GAAG,aAAaH,UAAU,uIAAuII,SAA4B,IAAlBrB,EAAoCsB,QAhDtO,WACZpB,EAAc,GAAGM,SAASC,cAAc,uBAAuBC,UAAUa,OAAO,UAGnFpB,EADuBD,EAAc,EAAKA,EAAc,EAAI,GAGzDsB,OAAOC,WAAa,IAChBzB,EAAgB,GAAGC,EAAiBD,EAAgB,KAEnDwB,OAAOC,WAAa,IACrBzB,EAAgB,GAAGC,EAAiBD,EAAgB,KAGpDA,EAAgB,GAAGC,EAAiBD,EAAgB,IAE/D,EAiC6Q,UACrP,SAAC,MAAa,CAAC0B,KAAK,aAExB,mBAAQN,GAAG,aAAaH,UAAU,uIAAuIK,QAlC1K,WACZpB,EAAc,IAAIM,SAASC,cAAc,uBAAuBC,UAAUa,OAAO,UAGpFpB,EADkBD,EAAc,GAAKA,EAAc,EAAI,IAGvD,IAAMyB,EAAmBH,OAAOC,WAAa,IAAM,KAAW,KAE3DD,OAAOC,WAAa,IAChBG,KAAKC,IAAI7B,IAAkB2B,EAAoBH,OAAOC,WAAa,KAAMxB,EAAiBD,EAAgB,KAEzGwB,OAAOC,WAAa,IACrBG,KAAKC,IAAI7B,GAAiB2B,EAAoBH,OAAOC,WAAa,KAAMxB,EAAiBD,EAAgB,KAGzG4B,KAAKC,IAAI7B,GAAiB2B,EAAoBH,OAAOC,WAAa,KAAMxB,EAAiBD,EAAgB,IAEpH,EAiBiN,UACzL,SAAC,MAAc,CAAC0B,KAAK,gBAG7B,eAAII,IAAKjC,EAAauB,GAAG,WAAWH,UAAU,wEAAuE,SAEvG,OAANtB,QAAM,IAANA,OAAM,EAANA,EAAQoC,KAAI,SAACC,EAAOC,GAChB,OACI,eAAchB,UAAmB,IAARgB,EAAY,qCAAuC,8BAA+B,cAAaA,EAAM,EAAE,UAC5H,SAAC,KAAI,CAACC,GAAE,WAAMtC,EAAI,oBAAYoC,EAAMZ,IAAMH,UAAU,sFAAqF,UACrI,SAAC,EAAAkB,cAAa,CACVlB,UAAU,uDACVmB,IAAK,mCAAqCJ,EAAMK,YAChDC,OAAQ,IACRC,IAAI,oBANPN,EAWjB,YAO5B,C","sources":["components/carousel.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport { BsChevronLeft, BsChevronRight } from 'react-icons/bs';\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\n\r\nconst CarouselElement = ({ title, movies, type }) =>  {\r\n    const carouselRef = useRef(null);\r\n    const [carouselValue, setCarouselValue] = useState(1);\r\n    const [activeSlide, setActiveSlide] = useState(1);\r\n    \r\n    useEffect(() => {\r\n        carouselRef.current.style.transform = `translateX(${carouselValue}px)`;\r\n\r\n        if(document.querySelector(\"#carousel li\") !== null) document.querySelector(`#carousel li[data-number=\"${activeSlide}\"]`).classList.add('active');\r\n    }, [carouselValue, activeSlide]);\r\n\r\n    const handlePrev = () => {\r\n        if(activeSlide > 1) document.querySelector('#carousel li.active').classList.remove('active');\r\n\r\n        const previousSlide = (activeSlide > 1) ? activeSlide - 1 : 1;\r\n        setActiveSlide(previousSlide);\r\n\r\n        if(window.innerWidth > 768) {\r\n            if(carouselValue < 0) setCarouselValue(carouselValue + 250);\r\n        }\r\n        else if(window.innerWidth > 380) {\r\n            if(carouselValue < 0) setCarouselValue(carouselValue + 220);\r\n        }\r\n        else {\r\n            if(carouselValue < 0) setCarouselValue(carouselValue + 180);\r\n        }\r\n    }\r\n\r\n    const handleNext = () => {\r\n        if(activeSlide < 20) document.querySelector('#carousel li.active').classList.remove('active');\r\n\r\n        const nextSlide = activeSlide < 20 ? activeSlide + 1 : 20;\r\n        setActiveSlide(nextSlide);\r\n\r\n        const carouselMaxWidth = window.innerWidth > 380 ? 210 * 20 : 180 * 20;\r\n\r\n        if(window.innerWidth > 768) {\r\n            if(Math.abs(carouselValue) <= carouselMaxWidth - (window.innerWidth / 1.3)) setCarouselValue(carouselValue - 250);\r\n        }\r\n        else if(window.innerWidth > 380) {\r\n            if(Math.abs(carouselValue) < carouselMaxWidth - (window.innerWidth / 1.6)) setCarouselValue(carouselValue - 220);\r\n        }\r\n        else {\r\n            if(Math.abs(carouselValue) < carouselMaxWidth - (window.innerWidth / 1.6)) setCarouselValue(carouselValue - 180);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <motion.div\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n                transition={{ duration: 0.5 }}\r\n                className=\"w-full h-full\"\r\n            >\r\n                <div data-id={title.replaceAll(\" \", \"\").toLowerCase()} className=\"movieCarousel relative w-full mb-10\">\r\n                    <h2 className=\"font-main text-2xl text-gray-100 font-semibold drop-shadow-lg base:max-w-[10rem] md:max-w-full\">{title}</h2>\r\n\r\n                    <div id=\"carouselControls\" className=\"flex gap-6 w-[100px] absolute top-0 base:right-[-1em] sm:right-0\">\r\n                        <button type=\"button\" id=\"prevButton\" className=\"flex justify-center items-center text-white bg-mainRed rounded-full h-8 w-8 border-0 drop-shadow-md transition-all hover:bg-darkGray\" disabled={carouselValue === 0 ? true : false} onClick={handlePrev}>\r\n                            <BsChevronLeft size=\"1.2em\" />\r\n                        </button>\r\n                        <button id=\"nextButton\" className=\"flex justify-center items-center text-white bg-mainRed rounded-full h-8 w-8 border-0 drop-shadow-md transition-all hover:bg-darkGray\" onClick={handleNext}>\r\n                            <BsChevronRight size=\"1.2em\" />\r\n                        </button>\r\n                    </div>\r\n                    <ul ref={carouselRef} id=\"carousel\" className=\"flex justify-start items-center h-[370px] w-full gap-4 transition-all\">\r\n                        {\r\n                            movies?.map((movie, key) => {\r\n                                return (\r\n                                    <li key={key} className={key === 0 ? \"carouselItem active transition-all\" : \"carouselItem transition-all\"} data-number={key + 1}>\r\n                                        <Link to={`/${type}/details/${movie.id}`} className=\"block relative h-[350px] base:w-[170px] sm:w-[200px] transition-all hover:scale-105\">\r\n                                            <LazyLoadImage\r\n                                                className=\"object-contain h-full w-full relative transition-all\"\r\n                                                src={'https://image.tmdb.org/t/p/w500/' + movie.poster_path}\r\n                                                height={350}\r\n                                                alt=\"movie_poster\"\r\n                                            />\r\n                                        </Link>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </motion.div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CarouselElement;"],"names":["title","movies","type","carouselRef","useRef","useState","carouselValue","setCarouselValue","activeSlide","setActiveSlide","useEffect","current","style","transform","document","querySelector","classList","add","initial","opacity","animate","transition","duration","className","replaceAll","toLowerCase","id","disabled","onClick","remove","window","innerWidth","size","carouselMaxWidth","Math","abs","ref","map","movie","key","to","LazyLoadImage","src","poster_path","height","alt"],"sourceRoot":""}